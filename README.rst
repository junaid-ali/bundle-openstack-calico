=============================
Calico/OpenStack Juju bundles
=============================

This repository contains code for generating Juju bundles for deploying a
Calico/OpenStack cluster on Ubuntu Trusty, with various combinations of

- the OpenStack release (Kilo or Liberty)

- the Calico code (stable or testing).

`gen-bundle.sh` is a shell script that generates an appropriate bundle for any
of those combinations; please see comments in the script for how to use it.

`bundle.yaml` is the re-exported bundle description that I obtained (during
March 2016) by generating and deploying a bundle using Liberty and stable
Calico code, then using Juju GUI to re-export a description of the deployed
system.  It differs from what `gen-bundle.sh` generates in the following
details.

- Its charm URLs include revision numbers, i.e. it freezes in the versions of
  the relevant charms that were available at the time of the deployment.

- It has different annotations, reflecting charms being moved around in the GUI.

- It has an explicit "num_units: 0" for the neutron-calico charm.  I believe
  this is associated with neutron-calico being subordinate to nova-compute;
  i.e. in practice, there is an neutron-calico unit co-located with every
  nova-compute unit; hence the true number of units of neutron-calico cannot be
  specified independently of nova-compute.

- It doesn't have a top-level `envExport` wrapper.

- It has an explicit list of the machines that were used in the deployment, and
  `to` declarations that specify which machine each unit was deployed to.
  Whereas the YAML generated by `gen-bundle.sh` only has `to` declarations for
  particular charms that need to be deployed together.

Otherwise the two representations are the same.
